name: Build PyPI packages

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
      - develop
    tags:
      - "v**"
  release:
    types:
      - published

jobs:
  check-version-strings:
    runs-on: ubuntu-latest
    container: python:3.9.18-slim-bullseye

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          pip install pyyaml
      - name: Test versions
        run: |
          python testversion.py

  build_wheels:
    name: Build wheels

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Build wheels
        run: |
          python --version ; pip --version  # for debugging purposes
          pip install virtualenv
          virtualenv venv
          source venv/bin/activate
          pip install build
          python -m build
      - uses: actions/upload-artifact@v3
        with:
          path: ./dist/*.whl

  test_wheels:
    name: Test wheels

    runs-on: ubuntu-latest

    needs: [build_wheels]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist
      - name: Install package
        run: |
          python --version ; pip --version  # for debugging purposes
          pip install virtualenv
          virtualenv venv
          source venv/bin/activate
          pip install dist/pylebedev*.whl
          pip install pytest
          python -m pytest tests/*.py

  code_coverage:
    name: Perform code coverage

    runs-on: ubuntu-latest

    needs: [test_wheels]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist
      - name: Install package
        run: |
          python --version ; pip --version  # for debugging purposes
          pip install virtualenv
          virtualenv venv
          source venv/bin/activate
          pip install dist/pylebedev*.whl
          pip install pytest coverage
          coverage run -m unittest tests/*.py
          coverage xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build_sdist:
    name: Build source distribution
    needs: [check-version-strings,test_wheels]
    runs-on: ubuntu-latest

    steps:
      - name: Prepare build environment
        run: |
          python --version ; pip --version  # for debugging purposes
          pip install virtualenv
          virtualenv venv
          source venv/bin/activate
          pip install build
      - uses: actions/checkout@v4

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [test_wheels,build_sdist]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1